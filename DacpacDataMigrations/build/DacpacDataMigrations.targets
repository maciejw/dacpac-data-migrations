<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="DacpacDataMigrations.SortItemGroup" AssemblyFile="$(MSBuildThisFileDirectory)netstandard2.0\$(MSBuildThisFileName).dll" />

  <PropertyGroup Label="Obsolete public properties">
    <DacpacDataMigrationsTableName Condition="'$(DacpacDataMigrationsTableName)' == ''">Log</DacpacDataMigrationsTableName>
  </PropertyGroup>
  <PropertyGroup Label="Public properties">
    <DacpacDataMigrationsSchema Condition="'$(DacpacDataMigrationsSchema)' == ''">__Migrations</DacpacDataMigrationsSchema>
    <SortMigrationFilesUsingNumericOrder Condition="'$(SortMigrationFilesUsingNumericOrder)' == ''">false</SortMigrationFilesUsingNumericOrder>
  </PropertyGroup>

  <PropertyGroup>
    <_MigrationsSchema>$(DacpacDataMigrationsSchema)</_MigrationsSchema>
    <_MigrationsTable>$(_MigrationsSchema).$(DacpacDataMigrationsTableName)</_MigrationsTable>
    <_BaseDirectory>$(MSBuildProjectDirectory)\$(BaseIntermediateOutputPath)\$(Configuration)</_BaseDirectory>

    <_PreDeploymentScript>
      <![CDATA[
BEGIN TRANSACTION;
SET XACT_ABORT ON;
]]>
    </_PreDeploymentScript>
    <_SetupFile>$(_BaseDirectory)\DacpacDataMigrationsSetup.sql</_SetupFile>
    <_SetupScript>
      <![CDATA[
IF (SELECT SCHEMA_ID('$(_MigrationsSchema)')) IS NULL
BEGIN
  EXEC ('CREATE SCHEMA $(_MigrationsSchema)')
END

IF (SELECT SCHEMA_ID('__Migrations')) IS NULL
BEGIN
  EXEC ('CREATE SCHEMA __Migrations')
END

IF (SELECT OBJECT_ID('$(_MigrationsTable)')) IS NULL
BEGIN
  CREATE TABLE $(_MigrationsTable)
  (
    Name NVARCHAR(256) PRIMARY KEY NOT NULL
  )
END

IF (SELECT OBJECT_ID('__Migrations.LogV2')) IS NULL
BEGIN
  CREATE TABLE __Migrations.LogV2
  (
    Id INT NOT NULL IDENTITY,
    [Name] NVARCHAR(256) NOT NULL,
    CreatedAt datetime NOT NULL CONSTRAINT DF_LogV2_Created DEFAULT (GETDATE()),
    CreatedBy nvarchar(128) NOT NULL CONSTRAINT DF_LogV2_CreatedBy DEFAULT (SUSER_SNAME()),
    CONSTRAINT PK_LogV2_Id PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT UX_LogV2_Name UNIQUE ([Name])
  )
END
IF EXISTS (SELECT 1 FROM $(_MigrationsTable))
  AND NOT EXISTS (SELECT 1 FROM __Migrations.LogV2)
BEGIN
  PRINT 'Migrating "$(_MigrationsTable)" to "__Migrations.LogV2"'
  INSERT INTO __Migrations.LogV2([Name])
  SELECT Name from $(_MigrationsTable)
END
]]>
    </_SetupScript>
    <_OutputFile>$(_BaseDirectory)\DacpacDataMigrations.sql</_OutputFile>
    <_OutputScript>
      <![CDATA[
-- Start of a data migration script
]]>
    </_OutputScript>
    <_PostDeploymentScript>
      <![CDATA[
:r ".\$([MSBuild]::MakeRelative($(_BaseDirectory), $(_SetupFile)))"
:r ".\$([MSBuild]::MakeRelative($(_BaseDirectory), $(_OutputFile)))"
      ]]>
    </_PostDeploymentScript>
    <_CommitScript>
      <![CDATA[
COMMIT TRANSACTION;
]]>
    </_CommitScript>

    <_PreDeploymentScriptFile>$(_BaseDirectory)\Script.PreDeployment.sql</_PreDeploymentScriptFile>
    <_PostDeploymentScriptFile>$(_BaseDirectory)\Script.PostDeployment.sql</_PostDeploymentScriptFile>


</PropertyGroup>

  <ItemGroup>
    <PreDeploy Include="$(_PreDeploymentScriptFile)" />
    <PostDeploy Include="$(_PostDeploymentScriptFile)" />
  </ItemGroup>

  <PropertyGroup>
    <DacpacDataMigrationsDependsOn>
      SetupProject;
      AddPreDeployScripts;
      AddMigrationScripts;
      AddPostDeployScripts;
      AddCommitScript;
    </DacpacDataMigrationsDependsOn>
  </PropertyGroup>

  <Target Name="DacpacDataMigrations" BeforeTargets="BeforeBuild" DependsOnTargets="$(DacpacDataMigrationsDependsOn)" />

  <Target Name="AddMigrationScripts" Inputs="@(_Migration)" Outputs="%(Identity).Dummy">
    <PropertyGroup>
      <_Name>%(_Migration.RecursiveDir)%(_Migration.FileName)</_Name>
      <_Path>".\$([MSBuild]::MakeRelative($(_BaseDirectory), %(_Migration.FullPath)))"</_Path>
    </PropertyGroup>

    <Message Text="Adding post deploy '$(_Name)' to file $(_OutputFile)" />

    <PropertyGroup>
      <_Script>
        <![CDATA[
IF NOT EXISTS(SELECT 1 FROM __Migrations.LogV2 WHERE Name = '$(_Name)')
BEGIN
  PRINT N'Applying migration ''$(_Name)'''
  :r $(_Path)
  INSERT INTO __Migrations.LogV2([Name]) VALUES ('$(_Name)')
END
]]>
      </_Script>
    </PropertyGroup>

    <WriteLinesToFile File="$(_OutputFile)" Overwrite="false" Lines="$(_Script)" />
  </Target>

  <Target Name="AddPreDeployScripts" Inputs="@(_PreDeploy)" Outputs="%(Identity).Dummy">
    <PropertyGroup>
      <_Name>%(_PreDeploy.RecursiveDir)%(_PreDeploy.FileName)</_Name>
      <_Path>".\$([MSBuild]::MakeRelative($(_BaseDirectory), %(_PreDeploy.FullPath)))"</_Path>
    </PropertyGroup>

    <Message Text="Adding post deploy '$(_Name)' to file $(_PreDeploymentScriptFile)" />

    <PropertyGroup>
      <_Script>
        <![CDATA[
:r $(_Path)
]]>
      </_Script>
    </PropertyGroup>

    <WriteLinesToFile File="$(_PreDeploymentScriptFile)" Overwrite="false" Lines="$(_Script)" />
  </Target>

  <Target Name="AddPostDeployScripts" Inputs="@(_PostDeploy)" Outputs="%(Identity).Dummy">
    <PropertyGroup>
      <_Name>%(_PostDeploy.RecursiveDir)%(_PostDeploy.FileName)</_Name>
      <_Path>".\$([MSBuild]::MakeRelative($(_BaseDirectory), %(_PostDeploy.FullPath)))"</_Path>
    </PropertyGroup>

    <Message Text="Adding post deploy '$(_Name)' to file $(_PostDeploymentScriptFile)" />

    <PropertyGroup>
      <_Script>
        <![CDATA[
:r $(_Path)
]]>
      </_Script>
    </PropertyGroup>

    <WriteLinesToFile File="$(_PostDeploymentScriptFile)" Overwrite="false" Lines="$(_Script)" />
  </Target>

  <Target Name="SetupProject">
    <MakeDir Directories="$(_MigrationsRootFolder)" Condition="!Exists('$(_MigrationsRootFolder)')" />
    <MakeDir Directories="$(_BaseDirectory)" Condition="!Exists('$(_BaseDirectory)')" />

    <DacpacDataMigrations.SortItemGroup In="@(__Migration)" CompareNumbersInItemsAsNumbers="$(SortMigrationFilesUsingNumericOrder)">
      <Output TaskParameter="Out" ItemName="_Migration" />
    </DacpacDataMigrations.SortItemGroup>

    <Message Text="Writing migration setup file $(_SetupFile)" />
    <WriteLinesToFile File="$(_SetupFile)" Overwrite="true" Lines="$(_SetupScript)" />

    <Message Text="Writing beginning of migration output file $(_OutputFile)" />
    <WriteLinesToFile File="$(_OutputFile)" Overwrite="true" Lines="$(_OutputScript)" />

    <WriteLinesToFile File="$(_PreDeploymentScriptFile)" Overwrite="true" Lines="$(_PreDeploymentScript)" />
    <WriteLinesToFile File="$(_PostDeploymentScriptFile)" Overwrite="true" Lines="$(_PostDeploymentScript)" />
  </Target>
  <Target Name="AddCommitScript">
    <WriteLinesToFile File="$(_PostDeploymentScriptFile)" Overwrite="false" Lines="$(_CommitScript)" />
  </Target>
</Project>
